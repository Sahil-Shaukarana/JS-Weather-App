*{
  margin:0;
  padding:0;
  box-sizing:border-box;
  font-family:"Intero", system-ui, -apple-system, BlinkMacSystemFont,sans-serif;
}

body{
  overflow:hidden
}

.container{
  width:100%;
  height: 100vh;
  background: linear-gradient(135deg, #0f2027 0%, 
  #6a0572 50%,  
  #ff6f61 75%,    
  #1c1c1c 100%); 
  background-size: 400% 400%;
  animation: gradientShift 8s ease infinite;
  display:flex;
  flex-direction: column;
  justify-content: center;
  align-items:center;
  position:relative; 
   padding: 2rem;
}

@keyframes gradientShift{
  0%{
    background-position: 0% 50%;

  }
   50%{
    background-position: 100% 50%;
  }

   100% {
    background-position: 0% 50%;
  } 
}

.weather-card{
  backdrop-filter:blur(2px); 
  /*comment- it will blur the card above the background */
  background-color: rgba(255,255,255,0.1);
  border: 1px solid rgba(255,255,255,0.2);
  border-radius:2rem;
  padding:3rem;
  box-shadow: 0 20px 40 px rgba(0,0,0,0.1),
   0 1px 0 rgba(255, 255, 255, 0.2) inset; 
   transform: translateY(0);
   transition: all 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  max-width: 600px;
  width: 100%;
}

.weather-card:hover{
   transform: translateY(-8px) scale(1.04);

    /* 1Ô∏è‚É£ First shadow:
  0 30px 60px rgba(0, 0, 0, 0.15)

0 ‚Üí x-offset = no left/right movement, shadow stays centered horizontally.
30px ‚Üí y-offset = shadow appears 30px below the element.
60px ‚Üí blur radius = large blur ‚Üí very soft, diffused edges.
rgba(0, 0, 0, 0.15) ‚Üí black with 15% opacity (very light gray shadow).
üí° Effect: Creates a big, soft outer shadow under the element, making it look elevated (like it‚Äôs floating higher than the earlier 20px 40px example). */
  box-shadow: 0 30px 60px rgba(0, 0, 0, 0.15),
    0 1px 0 rgba(255, 255, 255, 0.3) inset;

/* 2Ô∏è‚É£ Second shadow:

0 1px 0 rgba(255, 255, 255, 0.3) inset
0 ‚Üí x-offset = no horizontal shift.
1px ‚Üí y-offset = shadow appears 1px below the top edge inside the box.
0 ‚Üí blur radius = sharp, no blur.
rgba(255, 255, 255, 0.3) ‚Üí white with 30% opacity.
inset ‚Üí shadow is drawn inside the box.
üí° Effect: Adds a faint inner highlight at the top, giving the box a subtle glossy/3D look. */
}


.weather {
  display: flex;
  align-items: center;
  justify-content: space-between;
  color: white;
  margin-bottom: 2rem;
  gap: 2rem;
}

.temp-section{
  display:flex;
  align-items:baseline;
  gap:0.5rem
}

.temp{
  font-size:5rem;
  font-weight: 300;
  line-height: 1;
  text-shadow: 0 4px 8px ;/*rgba(255, 255, 255, 0.1);*/
  letter-spacing: -0.02em;
}

.temp-unit{
  font-size:1rem;
  font-weight: 400;
  opacity: 0.8;
  margin-top: 1rem;
}

.time_location{
flex: 1;
text-align:center;
}

.location{
  font-size:2.5rem;
  font-weight:600;
  margin-bottom:0.5rem;
  text-shadow: 0 2px 4px rgba(0.0.0,0.1);
}

.datetime{
  font-size:1rem;
  opacity:0.9;
  font-weight: 400;
  letter-spacing: 0.5px;
}

.weather_condition{
  text-align:center;
  display:flex;
  flex-direction: column;
  align-items:center;
  gap:1rem;

}


.weather-icon {
  font-size: 4rem;
  animation: float 3s ease-in-out infinite;
  filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1));
}

@keyframes float{
  0%,
 
  50%{
    transform: translateY(-10px);
  }
   100%{
    transform:translateY(0px);
  }
}

.condition{
  font-size: 1.2rem;
  font-weight: 500;
  text-transform: capitalize;
  opacity: 0.95;
}

.weather-details
{
  display: grid;
  grid-template-columns: repeat(auto-fit,minmax(120px,1fr));
  gap:1.5rem;
  margin-top:2rem;
  padding-top:2rem;
  border-top:1px solid rgba(255,255,255,0.2)
}

.detail-item {
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  /* 1. backdrop-filter

This CSS property applies a filter (like blur, brightness, contrast, etc.) to the background behind an element, not to the element itself.
Think of it like a frosted glass effect: you can see what‚Äôs behind, but blurred.
üîπ 2. blur(10px)
The filter being applied is a blur, with radius = 10px.
Bigger numbers = stronger blur.
So the background behind the element looks blurry, but the element‚Äôs own content (like text or icons inside it) stays sharp.
üîπ 3. -webkit- prefix
Safari and some WebKit-based browsers (like older Chrome versions) require the -webkit- prefix for backdrop-filter.
Modern Chrome, Edge, and Firefox may support just backdrop-filter without the prefix.
üëâ Best practice is to write both: */
  background: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 1rem;
  padding: 1.5rem;
  text-align: center;
  transition: all 0.3s ease;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}


.detail-item:hover {
  background: rgba(255, 255, 255, 0.1);
  transform: translateY(-2px);
}

.detail-item .label {
  font-size: 0.85rem;
  opacity: 0.8;
  text-transform: uppercase;
  letter-spacing: 1px;
  font-weight: 500;
  color: rgba(255, 255, 255, 0.9);
}

.detail-item .value {
  font-size: 1.4rem;
  font-weight: 600;
  color: white;
}

.search-nav{
  position:fixed;
bottom: 0;
left: 0;
right: 0;
/* ‚úÖ So yes, for your input field, right: 0; is useless unless you make it stretch full-width. */
padding: 2rem;
z-index: 10;
/* 2. z-index: 10;
Controls the stacking order (which element appears on top if elements overlap).
Higher number = more "on top."
Default z-index = auto (0 if positioned).
By giving this nav z-index: 10, you make sure it sits above other elements like content or background.
üëâ Example: If your page content scrolls, the nav won‚Äôt get hidden behind it.  */

}

.search-form{
  max-width:500px;
  margin:0 auto;
}

.search-container{
  backdrop-filter:blur(20px);
  -webkit-backdrop-filter: blur(20px);
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 2rem;
  display: flex;
  align-items: center;
  padding: 0.5rem;
   transition: all 0.3s ease;
  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
}

.search-container:hover, .search-container:focus-within{
background:rgba(255,255,255,0.15);
  border-color: rgba(255, 255, 255, 0.3);
  box-shadow:  0 15px 40px rgba(0,0,0,0.15);
}


.searchField{
  flex: 1;
  font-size:1.1rem;
  outline:none;
  color:white;
  background: transparent;
  padding:1rem 1.5rem;
  border:none;
  font-weight: 400;
}

.searchField::placeholder{
  color: rgba(255, 255, 255, 0.7);
}


.search-btn{
  background: linear-gradient(135deg, #667eea, #764ba2);
  border: none;
  border-radius: 1.5rem;
  padding:1rem;
  color:white;
  cursor:pointer;
  display:flex;
  align-items:center;
  justify-content: center;
  transition: all 0.3s ease;
  box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);

}


.search-btn:hover{
  transform:scale(1.05);
  box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);

}

.search-btn:active{
  transform: scale(0.95);
}

@media(max-width:768px){
  .container{
    padding:1rem;
  }

  .weather-card{
    padding:2rem;
  }

  .weather-card{
    padding:2rem;
  }

  .weather{
    flex-direction: column;
    text-align:center;
    gap:2rem;
  }

  .temp{
    font-size:4rem;
  }

    .location {
    font-size: 2rem;
  }


    .weather-details {
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
  }
    .detail-item {
    padding: 1rem;
  }

   .search-nav {
    padding: 1rem;
  }
}



@media (max-width: 480px) {
  .temp {
    font-size: 3.5rem;
  }

    .location {
    font-size: 1.8rem;
  }

   .weather-details {
    grid-template-columns: 1fr;
  }

   .weather-icon {
    font-size: 3rem;
  }
}


@media (prefers-reduced-motion: reduce) {
  * {   /*     * { ... } ‚Üí applies to all elements. */
    
    /* @media (prefers-reduced-motion: reduce) { ... }

This detects if the user has set ‚ÄúReduce Motion‚Äù in their operating system settings (like on macOS, Windows, iOS, Android).

If enabled ‚Üí it means the user doesn‚Äôt want too many animations or flashy transitions (often for accessibility, motion sickness, or simply preference). */
    animation-duration: 0.01ms !important;    /*makes animations almost instant.*/
    animation-iteration-count: 1 !important;  /*ensures animations don‚Äôt loop infinitely.*/
    transition-duration: 0.01ms !important; /*disables smooth transitions (basically instant).*/
  }

  .container {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  }
}